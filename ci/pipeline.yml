---
jobs:
- name: deploy-as-development
  serial: true
  plan:
  - in_parallel:
    - get: app-autoscaler-release
      trigger: true
    - get: autoscaler-manifests
      resource: autoscaler-manifests
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
    - get: cf-stemcell-jammy
      trigger: true
  - task: terraform-secrets
    file: autoscaler-manifests/ci/terraform-secrets.yml
  - put: autoscaler-deployment-development
    params: &deploy-params
      manifest: app-autoscaler-release/templates/app-autoscaler.yml
      stemcells:
      - cf-stemcell-jammy/*.tgz
      ops_files:
      - autoscaler-manifests/bosh/opsfiles/instance-identity-cert-from-cf-dev.yml
      - autoscaler-manifests/bosh/opsfiles/enable-nats-tls-dev.yml
      - autoscaler-manifests/bosh/opsfiles/loggregator-certs-from-cf-dev.yml
      - app-autoscaler-release/operations/add-extra-plan.yml
      - autoscaler-manifests/bosh/opsfiles/enable-log-cache-dev.yml
      - autoscaler-manifests/bosh/opsfiles/log-cache-syslog-server-dev.yml
      - autoscaler-manifests/bosh/opsfiles/external-db.yml
      - autoscaler-manifests/bosh/opsfiles/bosh-dns-cf-deployment-name.yml
      - app-autoscaler-release/operations/remove-metricsserver.yml
      - app-autoscaler-release/operations/remove-metricsgateway.yml
      - app-autoscaler-release/operations/enable-scheduler-logging.yml
      - autoscaler-manifests/bosh/opsfiles/cf-uaa-client-secret-dev.yml
      - autoscaler-manifests/bosh/opsfiles/scaling-dev.yml
      vars_files:
      - autoscaler-manifests/bosh/varsfiles/development.yml
      - terraform-secrets/terraform.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF App Autoscaler on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF App Autoscaler on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))


- name: deploy-as-staging
  serial: true
  plan:
  - in_parallel:
    - get: app-autoscaler-release
      passed: [deploy-as-development]
      trigger: true
    - get: autoscaler-manifests
      resource: autoscaler-manifests
      passed: [deploy-as-development]
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
    - get: cf-stemcell-jammy
      passed: [deploy-as-development]
      trigger: true
  - task: terraform-secrets
    file: autoscaler-manifests/ci/terraform-secrets.yml
  - put: autoscaler-deployment-staging
    params: 
      manifest: app-autoscaler-release/templates/app-autoscaler.yml
      stemcells:
      - cf-stemcell-jammy/*.tgz
      ops_files:
      - autoscaler-manifests/bosh/opsfiles/instance-identity-cert-from-cf-stage.yml
      - autoscaler-manifests/bosh/opsfiles/enable-nats-tls-stage.yml
      - autoscaler-manifests/bosh/opsfiles/loggregator-certs-from-cf-stage.yml
      - app-autoscaler-release/operations/add-extra-plan.yml
      - autoscaler-manifests/bosh/opsfiles/enable-log-cache-stage.yml
      - autoscaler-manifests/bosh/opsfiles/log-cache-syslog-server-stage.yml
      - autoscaler-manifests/bosh/opsfiles/external-db.yml
      - autoscaler-manifests/bosh/opsfiles/bosh-dns-cf-deployment-name.yml
      - app-autoscaler-release/operations/remove-metricsserver.yml
      - app-autoscaler-release/operations/remove-metricsgateway.yml
      - app-autoscaler-release/operations/enable-scheduler-logging.yml
      - autoscaler-manifests/bosh/opsfiles/cf-uaa-client-secret-stage.yml
      - autoscaler-manifests/bosh/opsfiles/scaling-stage.yml
      vars_files:
      - autoscaler-manifests/bosh/varsfiles/staging.yml
      - terraform-secrets/terraform.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF App Autoscaler on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF App Autoscaler on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-as-production
  serial: true
  plan:
  - in_parallel:
    - get: app-autoscaler-release
      passed: [deploy-as-staging]
      trigger: true
    - get: autoscaler-manifests
      resource: autoscaler-manifests
      passed: [deploy-as-staging]
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
    - get: cf-stemcell-jammy
      passed: [deploy-as-staging]
      trigger: true
  - task: terraform-secrets
    file: autoscaler-manifests/ci/terraform-secrets.yml
  - put: autoscaler-deployment-production
    params: 
      manifest: app-autoscaler-release/templates/app-autoscaler.yml
      stemcells:
      - cf-stemcell-jammy/*.tgz
      ops_files:
      - autoscaler-manifests/bosh/opsfiles/instance-identity-cert-from-cf-prod.yml
      - autoscaler-manifests/bosh/opsfiles/enable-nats-tls-prod.yml
      - autoscaler-manifests/bosh/opsfiles/loggregator-certs-from-cf-prod.yml
      - app-autoscaler-release/operations/add-extra-plan.yml
      - autoscaler-manifests/bosh/opsfiles/enable-log-cache-prod.yml
      - autoscaler-manifests/bosh/opsfiles/log-cache-syslog-server-prod.yml
      - autoscaler-manifests/bosh/opsfiles/external-db.yml
      - autoscaler-manifests/bosh/opsfiles/bosh-dns-cf-deployment-name.yml
      - app-autoscaler-release/operations/remove-metricsserver.yml
      - app-autoscaler-release/operations/remove-metricsgateway.yml
      - app-autoscaler-release/operations/enable-scheduler-logging.yml
      - autoscaler-manifests/bosh/opsfiles/cf-uaa-client-secret-prod.yml
      - autoscaler-manifests/bosh/opsfiles/scaling-prod.yml
      vars_files:
      - autoscaler-manifests/bosh/varsfiles/production.yml
      - terraform-secrets/terraform.yml

  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF App Autoscaler on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-success))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF App Autoscaler on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel-failure))
      username: ((slack-username))
      icon_url: ((slack-icon-url))



resources:
- name: app-autoscaler-release
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: https://github.com/cloudfoundry/app-autoscaler-release
    branch: main
    tag_filter: "v*"

- name: autoscaler-manifests
  type: git
  source:
    uri: https://github.com/cloud-gov/cg-deploy-autoscaler.git
    branch: main
    paths:
    - ci/*
    - bosh/*

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))


- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-staging))
    region_name: ((aws-region))

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-production))
    region_name: ((aws-region))



- name: cf-stemcell-jammy
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent


- name: autoscaler-deployment-development
  type: bosh-deployment
  source:
    target: ((bosh.development.environment))
    client: ((bosh.development.client))
    client_secret: ((bosh.development.client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: app-autoscaler


- name: autoscaler-deployment-staging
  type: bosh-deployment
  source:
    target: ((bosh.staging.environment))
    client: ((bosh.staging.client))
    client_secret: ((bosh.staging.client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: app-autoscaler

- name: autoscaler-deployment-production
  type: bosh-deployment
  source:
    target: ((bosh.production.environment))
    client: ((bosh.production.client))
    client_secret: ((bosh.production.client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: app-autoscaler

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: s3-resource
    aws_region: us-gov-west-1
    tag: latest